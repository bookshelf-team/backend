import org.codehaus.groovy.runtime.GStringImpl

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '10.4.1'
    id 'checkstyle'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    springVersion = '3.2.1'
    jjwtVersion = '0.11.5'
    postgresqlVersion = '42.7.1'
    flywayVersion = '10.4.1'
    lombokVersion = '1.18.30'
    jakartaVersion = '3.0.2'
    checkstyleVersion = '10.9.3'
    testcontainersVersion = '1.19.4'
    restAssuredVersion = '5.4.0'
    mockitoVersion = '5.10.0'

    checkstyleConfigFile = "${rootDir}/config/checkstyle/checkstyle.xml" as GStringImpl
    checkstyleSuppressionFile = "${rootDir}/config/checkstyle/suppressions.xml" as GStringImpl
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springVersion"
    implementation "org.springframework.boot:spring-boot-starter-security:$springVersion"
    implementation "org.springframework.boot:spring-boot-starter-web:$springVersion"

    implementation "io.jsonwebtoken:jjwt-api:$jjwtVersion"
    implementation "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
    implementation "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"

    implementation "org.postgresql:postgresql:$postgresqlVersion"
    implementation "org.flywaydb:flyway-core:$flywayVersion"
    implementation "org.flywaydb:flyway-database-postgresql:$flywayVersion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    implementation "jakarta.validation:jakarta.validation-api:$jakartaVersion"
    implementation 'org.hibernate:hibernate-validator:8.0.1.Final'

    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    checkstyle "com.puppycrawl.tools:checkstyle:$checkstyleVersion"

    testImplementation "org.springframework.boot:spring-boot-starter-test:$springVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testcontainersVersion"
    testImplementation "org.testcontainers:postgresql:$testcontainersVersion"
    testImplementation "io.rest-assured:rest-assured:$restAssuredVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
}

tasks.named('test') {
    useJUnitPlatform(){
        ignoreFailures = true
    }
}

jacocoTestReport {
    reports {
        html.outputLocation = layout.buildDirectory.dir('jacoco')
    }
}

checkstyle {
    toolVersion = "$checkstyleVersion"
    configFile = file("$checkstyleConfigFile")
    configProperties = ['suppressionFile' : file("$checkstyleSuppressionFile")]
    sourceSets = [project.sourceSets.main, project.sourceSets.test] as Collection<SourceSet>
}

tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = false
        html.required = true
        html.stylesheet resources.text.fromFile("config/xsl/checkstyle-custom.xsl")
    }
}
